# name: "Complete CI/CD"

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build_and_deploy:
#     name: "Pipeline initialization"
#     runs-on: "ubuntu-latest"
#     steps:
#       - name: "Check out the repo"
#         uses: "actions/checkout@v3"

#       - name: "Read and increment version"
#         run: |
#           current_version=$(cat VERSION)
#           new_version=$(echo "$current_version + 0.1" | bc)
#           echo $new_version > VERSION
#           echo "BUILD_VERSION=$new_version" >> $GITHUB_ENV

#       - name: "Login to Docker Hub"
#         uses: "docker/login-action@v2"
#         with:
#           username: "${{ secrets.DOCKERHUB_USERNAME }}"
#           password: "${{ secrets.DOCKERHUB_TOKEN }}"

#       - name: "Build and push frontend Docker image"
#         uses: "docker/build-push-action@v4"
#         with:
#           context: "."
#           push: true
#           tags: "fynewily/hostspace-challenge:frontend-v${{ env.BUILD_VERSION }}"
#           file: "frontend.Dockerfile"

#       - name: "Build and push backend Docker image"
#         uses: "docker/build-push-action@v4"
#         with:
#           context: "."
#           push: true
#           tags: "fynewily/hostspace-challenge:backend-v${{ env.BUILD_VERSION }}"
#           file: "backend.Dockerfile"

#       - name: "Terraform Plan"
#         uses: "enyioman/community-challenge/.github/workflows/aws_tf_plan.yml@main"
#         with:
#           gh_environment: "dev"
#         secrets:
#           cli_config_credentials_token: "${{ secrets.TFC_API_TOKEN }}" 

#   Plan:
#     uses: "enyioman/community-challenge/.github/workflows/aws_tf_plan.yml@main"
#     with:
#       gh_environment: "dev"
#     secrets:
#       cli_config_credentials_token: "${{ secrets.TFC_API_TOKEN }}"

#   Apply:
#     needs: "Plan"
#     uses: "enyioman/community-challenge/.github/workflows/aws_tf_apply.yml@main"
#     with:
#       gh_environment: "dev"
#     secrets:
#       cli_config_credentials_token: "${{ secrets.TFC_API_TOKEN }}"

#   Install_Kubectl:
#     name: "Install kubectl"
#     uses: "azure/setup-kubectl@v2.0"
#     with:
#       version: "v1.27.0"  # default is the latest stable
#     id: install

#   Configure_AWS_Credentials:
#     name: "Configure AWS Credentials"
#     uses: "aws-actions/configure-aws-credentials@v1"
#     with:
#       aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
#       aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
#       aws-region: "us-east-2"

#   Update_Kube_Config:
#     name: "Update kube config"
#     run: "aws eks update-kubeconfig --name hostspace"

#   Deploy_to_EKS:
#     name: "Deploy to EKS"
#     run: |
#       kubectl apply -f deployment.yaml
#       kubectl apply -f service.yaml
