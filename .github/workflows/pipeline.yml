name: "Complete CI/CD"

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    name: "Hostspace Pipeline"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Read and increment version"
        run: |
          current_version=$(cat VERSION)
          new_version=$(echo "$current_version + 0.1" | bc)
          echo $new_version > VERSION
          echo "BUILD_VERSION=$new_version" >> $GITHUB_ENV

      - name: "Login to Docker Hub"
        uses: "docker/login-action@v2"
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: "Build and push frontend Docker image"
        uses: "docker/build-push-action@v4"
        with:
          context: "."
          push: true
          tags: "fynewily/hostspace-challenge:frontend-v${{ env.BUILD_VERSION }}"
          file: "frontend.Dockerfile"

      - name: "Build and push backend Docker image"
        uses: "docker/build-push-action@v4"
        with:
          context: "."
          push: true
          tags: "fynewily/hostspace-challenge:backend-v${{ env.BUILD_VERSION }}"
          file: "backend.Dockerfile"

      - name: "Terraform Plan"
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./Terraform
      
      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ./Terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan
        working-directory: ./Terraform
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform Apply
        env:
          TERRAFORM_CLOUD_TOKENS: ${{ secrets.HOSTNAME }}=${{ secrets.TOKEN }}
        uses: dflook/terraform-apply@v1
        with:
          path: ./Terraform
          auto_approve: true
          output: "cluster_name"
          
      - name: "Install kubectl"
        uses: "azure/setup-kubectl@v2.0"
        with:
          version: "v1.27.0" 
        id: install

      - name: "Configure AWS Credentials"
        uses: "aws-actions/configure-aws-credentials@v1"
        with:
          aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws-region: "us-east-1"

      - name: "Update Kube Config"
        run: "aws eks update-kubeconfig --name ${{ steps.terraform-apply.outputs.cluster_name }}

      - name: "Deploy to EKS"
        run: |
          kubectl apply -f ./Deployment/frontend-deployment.yaml
          kubectl apply -f ./Deployment/frontend-service.yaml
